* Write some documentation, including a manual page.

* Check portability of the sources to non-Fedora systems.

* Remove dependency on libwww from W3C.  Apparently, this library is
  unmaintained upstream and not widely available.

* Better logging, in particular of network activity.  Final URLs after
  redirection should be included in error messages.

* Retry failed downloads.  Especially with download.fedoraproject.org,
  some downloads fail initially, but succeed when attempted again.

* Implement removal of stale RPM cache entries not referenced by any
  package set.

* Parallelize downloading.

* Store sizes of files inside RPMs.  Handle symbolic links and
  possibly hard links.

* Support extracting Java symbols (class, method, field definitions
  and references).

* Support for extracting Python symbols.  This probably needs a some
  flow analysis to give good results.

* Parallelize RPM parsing and database loading.  It is not entirely
  clear if this is beneficial on small systems, but it will probably
  help if symboldb ever runs on real server systems.

* Support unattended operation.  The package set <-> compose URL
  mapping should probably reside in the database, and a single command
  (which can be run from cron) could use that to update all package
  sets.  This also relies on better logging/diagnostics and improved
  error recovery.

* More test cases, including loading of sample RPMs.

* Follow the cryptographic chain starting with the repomd.xml file and
  verify all hashes up to the RPM files along the way.

* Add some convenience wrapper for PostgreSQL parameterized queries
  and parsing query results.  (This reaches into the territory of
  template metaprogramming, so beware.)

* Add ELF type column to symboldb.elf_file (EXEC/DYN/REL).
