Prerequisites
-------------

In addition to the usual C++ build environment, you need the following
development packages:

- curl-devel
- elfutils-devel
- elfutils-libelf-devel
- expat-devel
- nss-devel
- postgresql-devel
- rpm-devel
- vim-common
- w3c-libwww-devel
- zlib-devel

Building
--------

It should be sufficient to just type "make".

Running
-------

symboldb honors the PGUSER, PGDATABASE etc. variables generally used
by PostgreSQL applications.  If you want to change the defaults, you
have to set those environment variables.  The database schema is
currently hard-coded to "symboldb".

To create a database for your user account (named "USER"), run the
following commands as the "postgres" user:

  createuser USER
  createdb USER

Afterwards, as "USER", run "psql" to check if you can access the
database.

This command creates the "symboldb" database schema:

    symboldb --create-schema

This adds RPM files to the database, skipping already imported RPMs
(based on the content hash):

    symboldb --load-rpm *.rpm

Multiple load commands can be executed in parallel, but imports will
occasionally fail (due to an aborted database transaction) if the same
RPM file is loaded concurrently.

RPMs can be assigned to a package set (roughly equivalent to a
compose) using:

    symboldb --create-set=Fedora/18/x86_64 --arch=x86_64 *.rpm

To load RPMs from a combination of composes, use this command

    symboldb --create-set=Fedora/18/x86_64 --arch=x86_64
    symboldb --update-set-from-repo=Fedora/18/x86_64 \
      http://download.fedoraproject.org/pub/fedora/linux/updates/18/x86_64/ \
      http://download.fedoraproject.org/pub/fedora/linux/releases/18/Everything/x86_64/os/

This only downloads the latest version for each package
name/architecture combination.  RPMs are cached in a directory under
~/.cache/symboldb by default.

A single package set can cover multiple architectures.  The name of
the package set, RHEL-7.0/Server/x86_64 in the example, just follows a
naming convention and is not interpreted by the tool.

Examples for SQL queries are found in the doc/examples directory.
